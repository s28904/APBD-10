// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zad10.Contexts;

#nullable disable

namespace zad10.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("zad10.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK_account");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("FK_role");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Email = "Email1",
                            FirstName = "First1",
                            LastName = "Last1",
                            PhoneNumber = "123456789",
                            RoleId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            Email = "Email2",
                            FirstName = "First2",
                            LastName = "Last2",
                            PhoneNumber = "987654321",
                            RoleId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            Email = "Email3",
                            FirstName = "First3",
                            LastName = "Last3",
                            PhoneNumber = "654321789",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("zad10.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK_category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Kategoria 1"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Kategoria 2"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Kategoria 3"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Kategoria 4"
                        });
                });

            modelBuilder.Entity("zad10.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("Depth")
                        .HasColumnType("float")
                        .HasColumnName("depth");

                    b.Property<double>("Height")
                        .HasColumnType("float")
                        .HasColumnName("height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<double>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.Property<double>("Width")
                        .HasColumnType("float")
                        .HasColumnName("width");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Depth = 5.2000000000000002,
                            Height = 3.1000000000000001,
                            Name = "Prod 1",
                            Weight = 52.299999999999997,
                            Width = 10.300000000000001
                        },
                        new
                        {
                            ProductId = 2,
                            Depth = 5.2000000000000002,
                            Height = 3.1000000000000001,
                            Name = "Prod 2",
                            Weight = 52.299999999999997,
                            Width = 10.300000000000001
                        },
                        new
                        {
                            ProductId = 3,
                            Depth = 5.2000000000000002,
                            Height = 3.1000000000000001,
                            Name = "Prod 3",
                            Weight = 52.299999999999997,
                            Width = 10.300000000000001
                        },
                        new
                        {
                            ProductId = 4,
                            Depth = 5.2000000000000002,
                            Height = 3.1000000000000001,
                            Name = "Prod 4",
                            Weight = 52.299999999999997,
                            Width = 10.300000000000001
                        });
                });

            modelBuilder.Entity("zad10.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_product")
                        .HasColumnOrder(0);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FK_category")
                        .HasColumnOrder(1);

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products_Categories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        });
                });

            modelBuilder.Entity("zad10.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK_role");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("zad10.Models.ShoppingCart", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("FK_account")
                        .HasColumnOrder(0);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("FK_product")
                        .HasColumnOrder(1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Shopping_Carts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            ProductId = 2,
                            Amount = 100
                        },
                        new
                        {
                            AccountId = 1,
                            ProductId = 4,
                            Amount = 25
                        },
                        new
                        {
                            AccountId = 2,
                            ProductId = 3,
                            Amount = 15
                        });
                });

            modelBuilder.Entity("zad10.Models.Account", b =>
                {
                    b.HasOne("zad10.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("zad10.Models.ProductCategory", b =>
                {
                    b.HasOne("zad10.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zad10.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zad10.Models.ShoppingCart", b =>
                {
                    b.HasOne("zad10.Models.Account", null)
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zad10.Models.Product", "Product")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("zad10.Models.Account", b =>
                {
                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("zad10.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("zad10.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("zad10.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
